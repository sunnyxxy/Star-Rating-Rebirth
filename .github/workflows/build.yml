name: Build and Release Windows Executable

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
          echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true

      - name: Install project dependencies
        run: poetry install --only=main --only=pyinstaller --no-root

      - name: Generate build time file
        shell: pwsh
        run: |
          $buildTime = Get-Date -Format "yyyy/MM/dd"
          "$buildTime" | Out-File -FilePath "build_time" -Encoding UTF8
        working-directory: ${{ github.workspace }}

      - name: Build
        run: poetry run pyinstaller --onefile --add-data "build_time;." --name srcalc srcalc-script.py

      - name: Test the exe file
        shell: pwsh
        run: |
          $exePath = Join-Path $env:GITHUB_WORKSPACE "dist/srcalc.exe"
          Write-Host "Testing executable at $exePath"
          
          $output = & $exePath --version
          Write-Host "Exe output:"
          Write-Host $output
          
          if ($output -notmatch "Star-Rating-Rebirth by") {
            Write-Error "Test failed: exe output did not contain the expected text."
          }

      - name: Create tag
        id: tag
        shell: pwsh
        run: |
          $version = Get-Date -Format "yyyy/MM/dd"
          Write-Host "Tagging version: $version"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $version
          git push origin $version
          echo "VERSION=$version" >> $env:GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: dist/srcalc.exe

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          files: dist/srcalc.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
